/// <reference types="node" />
import { Context } from '@loopback/context';
import { OpenApiSpec } from '@loopback/openapi-spec';
import { ServerRequest, ServerResponse } from 'http';
import { RoutingTable } from './router/routing-table';
export declare class HttpHandler {
    protected _rootContext: Context;
    protected _routes: RoutingTable<string>;
    handleRequest: (request: ServerRequest, response: ServerResponse) => Promise<void>;
    constructor(_rootContext: Context);
    registerController(name: string, spec: OpenApiSpec): void;
    protected _handleRequest(request: ServerRequest, response: ServerResponse): Promise<void>;
    protected _createRequestContext(req: ServerRequest, res: ServerResponse): Context;
    protected _bindFindRoute(context: Context): void;
    protected _bindInvokeMethod(context: Context): void;
}
