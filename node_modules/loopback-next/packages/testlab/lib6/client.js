"use strict";
// Copyright IBM Corp. 2013,2017. All Rights Reserved.
// Node module: @loopback/testlab
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * HTTP client utilities
 */
const http = require("http");
const supertest = require("supertest");
exports.supertest = supertest;
/**
 * Create a SuperTest client connected to an HTTP server listening
 * on an ephemeral port and calling `handler` to handle incoming requests.
 * @param handler
 */
function createClientForHandler(handler) {
    const server = http.createServer(handler);
    return supertest(server);
}
exports.createClientForHandler = createClientForHandler;
function createClientForServer(server) {
    return __awaiter(this, void 0, void 0, function* () {
        yield server.start();
        const url = `http://127.0.0.1:${server.config.port}`;
        // TODO(bajtos) Find a way how to stop the server after all tests are done
        return supertest(url);
    });
}
exports.createClientForServer = createClientForServer;
//# sourceMappingURL=client.js.map