export declare type ExtensionValue = any;
export interface OpenApiSpec {
    basePath: string;
    paths: PathsObject;
    [extension: string]: ExtensionValue;
}
export interface PathsObject {
    [httpPathOrSwaggerExtension: string]: PathItemObject | ExtensionValue;
}
export interface PathItemObject {
    get: OperationObject;
    put: OperationObject;
    post: OperationObject;
    delete: OperationObject;
    options: OperationObject;
    head: OperationObject;
    patch: OperationObject;
    [extension: string]: ExtensionValue;
}
export interface OperationObject {
    'x-operation-name': string;
    parameters?: Array<ParameterObject | ReferenceObject>;
    responses: ResponsesObject;
    [extension: string]: ExtensionValue;
}
export interface ParameterObject {
    name: string;
    in: ParameterLocation;
    description?: string;
    required?: boolean;
    type: string;
    [extension: string]: ExtensionValue;
}
export declare type ParameterLocation = 'query' | 'header' | 'path' | 'formData' | 'body';
export interface ReferenceObject {
    $ref: string;
}
export interface ResponsesObject {
    default?: ResponseObject | ReferenceObject;
    [httpStatusCodeOrSwaggerExtension: string]: ResponseObject | ReferenceObject | ExtensionValue;
}
export interface ResponseObject {
    description: string;
    schema: SchemaObject;
    [extension: string]: ExtensionValue;
}
export interface SchemaObject {
    type: string;
    items: SchemaItem;
    [extension: string]: ExtensionValue;
}
export interface SchemaItem {
    type: string;
    additionalProperties: boolean;
    [extension: string]: ExtensionValue;
}
